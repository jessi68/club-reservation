{"version":3,"sources":["logo.svg","reduxThunk/stores/api.js","images/store.jpg","components/store/store.jsx","components/stores/stores.jsx","reduxThunk/stores/reducer.js","containers/stores/StoresContainer.js","reduxThunk/index.js","components/KeyboardInput.jsx","components/StudentSignUp.jsx","components/dropdown/DropDown.jsx","containers/LocationDropDown/LocationDropDown.jsx","util/api/distanceBetweenPlaces.js","containers/stores/NearStoresContainer.js","pages/StoresPageForUser/WatchStoresPage.jsx","pages/ReservationPage/ReservationPage.jsx","pages/ReservationDetail/ReservationDetailPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","fireStore","firestore","fetchStores","a","localStorage","getItem","JSON","parse","stores","collection","get","forEach","querySnapShot","console","log","data","push","id","setItem","stringify","StoreDetail","store","name","src","storeImage","className","address","openTime","closeTime","Stores","isLoaded","length","map","GET_STORES","GET_STORES_SUCCESS","GET_STORES_FAILURE","ADD_STORE","ADD_STORE_SUCCESS","storeReducer","handleActions","state","loading","action","payload","connect","reducer","getStores","dispatch","type","api","response","error","useEffect","rootReducer","combineReducers","KeyboardInput","props","useState","input","setInput","onChange","e","inputValue","target","value","propFunction","itemList","item","index","undefined","setItemValue","StudentSignUp","navigate","useNavigate","onClick","rightValue","i","replace","signUpData","callPropFunction","DropDown","defaultValue","title","changeValue","LocationDropDown","campusNameToLocations","choose","getDistanceFromCoordinateToKm","startCoordinate","endCoordinate","degToRad","deg","Math","PI","dLat","lat","dLon","lng","sin","cos","d","atan2","sqrt","Geocode","setApiKey","setLanguage","setRegion","enableDebug","convertAddressToCoordinate","currentAddr","fromAddress","then","results","geometry","location","catch","err","getNearStores","curAddress","distance","curCoordinate","Promise","all","coordinate","filter","NearStoresContainer","nearStores","setNearStores","totalStores","curLocation","StoresPageForStudent","isSchoolChosen","chooseSchool","chooseLocation","ReservationPage","allPossibleDates","Array","from","_","parseInt","slice","startTime","people","headerCount","hours","dates","setDates","reservationInfo","newDates","curDate","Date","getDate","newDate","month","date","peopleNum","startHour","endHour","window","alert","ReservationDetailPage","for","App","logger","createLogger","createStore","applyMiddleware","ReduxThunk","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa4d5d52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { firestore } from \"firebase-admin\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport 'firebase/compat/firestore';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDoYZ6xSDj42gUFqLNwByd-2Xl0LgQkDsQ\",\r\n  authDomain: \"reservation-7cc8e.firebaseapp.com\",\r\n  projectId: \"reservation-7cc8e\",\r\n  storageBucket: \"reservation-7cc8e.appspot.com\",\r\n  messagingSenderId: \"517696782099\",\r\n  appId: \"1:517696782099:web:6acf834ab351927972a4e6\",\r\n  measurementId: \"G-JRV9XZKHTW\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fireStore = firebase.firestore();\r\n\r\nexport default firebase;\r\n\r\nexport const fetchStores = async () => {\r\n    if(localStorage.getItem(\"stores\")) {\r\n        return JSON.parse(localStorage.getItem(\"stores\"));\r\n    }\r\n    let stores = [];\r\n    const documents = await fireStore.collection(\"Store\").get();\r\n    documents.forEach(querySnapShot => {\r\n        console.log(querySnapShot.data());\r\n        stores.push({id: querySnapShot.id, \r\n        ...(querySnapShot.data())})\r\n\r\n    }\r\n        );\r\n    \r\n    localStorage.setItem(\"stores\", JSON.stringify(stores));\r\n        \r\n    return stores;\r\n}\r\n\r\nexport const addStore = async (store) => {\r\n    await fireStore.collection(\"Store\").add(store);\r\n    \r\n}","export default __webpack_public_path__ + \"static/media/store.7ad99b3e.jpg\";","import \"./store.css\";\r\nimport storeImage from \"../../images/store.jpg\"\r\n\r\nexport default function StoreDetail({store}) {\r\n    console.log(store);\r\n    console.log(store.name);\r\n\r\n        return  (\r\n            <section>\r\n                <img src={storeImage}></img>\r\n                <div className=\"vertical\">\r\n                    <div className=\"name\">{store.name}</div>\r\n                    <div className=\"address\">{store.address}</div>\r\n                    <div className=\"time\">영업 시간: {store.openTime} ~ {store.closeTime}</div>\r\n                </div>\r\n            </section>\r\n        );\r\n}","import StoreDetail from \"../store/store\";\r\nimport \"./stores.css\";\r\n\r\nexport default  function Stores({isLoaded, stores}) {\r\n    console.log(stores);\r\n    return (\r\n        <div className=\"container\">\r\n            {isLoaded && <h1>로딩중입니다.</h1>}\r\n            {!isLoaded && stores.length === 0 &&  <h1>3km 내에 매장이 없습니다.</h1>}\r\n            {!isLoaded && stores\r\n            && stores.map((store) => <StoreDetail store={store} key={store.name}></StoreDetail>)}\r\n        </div>\r\n    );\r\n}","import * as api from \"./api.js\";\r\nimport {handleActions}  from \"redux-actions\"\r\nimport { connect } from \"react-redux\";\r\n\r\nconst GET_STORES = 'GET_STORES';\r\nconst GET_STORES_SUCCESS = \"GET_STORES_SUCCESS\";\r\nconst GET_STORES_FAILURE = \"GET_STORES_FAILURE\";\r\n\r\nconst ADD_STORE = 'ADD_STORE';\r\nconst ADD_STORE_SUCCESS = \"ADD_STORE_SUCCESS\";\r\nconst ADD_STORE_FAILURE = \"ADD_STORE_FAILURE\";\r\n\r\nexport const getStores = () => async dispatch => {\r\n    dispatch({type: GET_STORES});\r\n    try {\r\n        const response = await api.fetchStores();\r\n        console.log(response);\r\n        dispatch({\r\n            type: GET_STORES_SUCCESS,\r\n            payload: response\r\n        })\r\n    } catch(e) {\r\n        dispatch({\r\n            type: GET_STORES_FAILURE,\r\n            payload: e,\r\n            error: true\r\n        })\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport const addStore = (store) => async dispatch => {\r\n    dispatch({type: ADD_STORE});\r\n    try {\r\n        const response = await api.addStore(store);\r\n        dispatch({\r\n            type: ADD_STORE_SUCCESS,\r\n            payload: response\r\n        })\r\n    } catch(e) {\r\n        dispatch({\r\n            type: ADD_STORE_FAILURE,\r\n            payload: e,\r\n            error: true\r\n        });\r\n        throw e;\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    loading: {\r\n        GET_STORES: false, \r\n        ADD_STORE: false\r\n    }, \r\n    stores: []\r\n}\r\n\r\nexport const storeReducer = handleActions({\r\n    [GET_STORES]: (state) =>  {\r\n        return ({\r\n        ...state, \r\n        loading: {\r\n            ...state.loading, \r\n            GET_STORES: true\r\n        }\r\n    })\r\n},\r\n    [ADD_STORE]: (state) => ({\r\n        ...state,\r\n        loading: {\r\n            ...state.loading,\r\n            ADD_STORE: true\r\n        }\r\n    }),\r\n    [GET_STORES_SUCCESS] : (state, action) => ({\r\n        ...state,\r\n        loading:  {\r\n            ...state.loading,\r\n            GET_STORES: false,\r\n        },\r\n        stores: action.payload\r\n    }),\r\n    [GET_STORES_FAILURE] : (state) => ({\r\n        ...state,\r\n        loading: {\r\n            ...state.loading,\r\n            GET_STORES: false\r\n        }\r\n    }),\r\n    [ADD_STORE_SUCCESS]: (state) => ({\r\n        \r\n    })\r\n}, initialState)","import { useEffect } from \"react\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport Stores from \"../../components/stores/stores\";\r\nimport {getStores} from \"../../reduxThunk/stores/reducer.js\";\r\n\r\nconst StoresContainer = ({getStores, isLoaded, stores}) => {\r\n\r\n    useEffect(() => {\r\n        getStores();\r\n    }, [getStores])\r\n    return  (\r\n        <Stores isLoaded={isLoaded} stores={stores}/>\r\n    )\r\n} \r\n\r\nexport default connect(\r\n    (reducer) => { \r\n        const storeReducer = reducer.storeReducer;\r\n        const state = storeReducer;\r\n        return ({\r\n        stores: state.stores,\r\n        isLoaded: state.loading.GET_STORES\r\n    });\r\n},\r\n    {\r\n        getStores\r\n    }\r\n)(StoresContainer);","import {combineReducers} from \"redux\";\r\nimport {storeReducer} from \"./stores/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    storeReducer\r\n})\r\n\r\nexport default rootReducer;","import React, {useState} from 'react'\r\n\r\nconst KeyboardInput = ( props ) => {\r\n    const [input, setInput] = useState('')\r\n\r\n    const onChange = (e) => {\r\n        let inputValue = e.target.value;\r\n        setInput(inputValue);\r\n        props.propFunction(props.id, inputValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"getInput\">\r\n            <div>{props.name}</div>\r\n            <input onChange={onChange} value={input}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default KeyboardInput;","import KeyboardInput from './KeyboardInput'\r\nimport {useNavigate} from 'react-router-dom';\r\nconst itemNameList = [\"id\", \"name\", \"password\", \"email\", \"phoneNumber\"];\r\nconst itemList = itemNameList.map((item, index) => {\r\n    return {\r\n        id: index,\r\n        name: item,\r\n        value: undefined,\r\n    }\r\n})\r\nconst setItemValue = (id, value) => {\r\n    itemList[id].value = value;\r\n}\r\n\r\nconst StudentSignUp = (  ) => {\r\n    const navigate = useNavigate();\r\n\r\n    const callPropFunction = () => {\r\n        const signUpData = {};\r\n        itemList.map(item => {\r\n            signUpData[item.name] = item.value.replace(/(\\s*)/g, \"\")\r\n        })\r\n        signUpData[\"userType\"] = \"student\"\r\n        console.log(signUpData)\r\n        console.log(navigate)\r\n        navigate.push('/')\r\n    }\r\n\r\n    const onClick = () => {\r\n        let rightValue = true;\r\n        for (let i=0; i<itemList.length; i++){\r\n            let item = itemList[i].value;\r\n            if (item === undefined){\r\n                rightValue = false;\r\n                break;\r\n            } else if (item.replace(/(\\s*)/g, \"\") === \"\"){\r\n                rightValue = false;\r\n                break;\r\n            }\r\n        }\r\n        if (rightValue){\r\n            callPropFunction()\r\n        } else{\r\n            console.log(\"빈 양식이 있습니다\");\r\n            console.log(itemList)\r\n        }\r\n    }\r\n\r\n    console.log(itemList);\r\n    return (\r\n        <div className=\"SignUp\">\r\n            <h1>Student 회원가입</h1>\r\n            {\r\n                itemList.map(\r\n                    item => (<KeyboardInput propFunction={setItemValue} key={item.id} id={item.id} name={item.name}/>)\r\n                )\r\n            }\r\n            <button onClick={onClick}>submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentSignUp;","import '@progress/kendo-theme-default/dist/all.css';\r\nimport { DropDownList} from \"@progress/kendo-react-dropdowns\"; \r\nimport \"./DropDown.css\";\r\n\r\nexport default function DropDown(props) {\r\n\r\n    return (<DropDownList defaultValue={props.title} className=\"drop-down-list\" \r\n    data={props.data} onChange={e => props.changeValue(e.value)}/>\r\n    );\r\n}","import { TreeViewItemPropsContext } from \"@progress/kendo-react-treeview\";\r\nimport { useRef } from \"react\";\r\nimport DropDown from \"../../components/dropdown/DropDown\";\r\nimport \"./LocationDropDown.css\";\r\n\r\n// LocationDropDown container 라고 하면 너무 기니까\r\n// 도메인 명 + dropdown 이라고 하기\r\nexport default function LocationDropDown(props) {\r\n\r\n    const campusNameToLocations = {\r\n        \"서울대학교\": \"서울특별시 관악구 관악로 1\",\r\n        \"연세대학교\": \"서울특별시 서대문구 연세로 50\",\r\n        \"건국대학교\": \"서울시 광진구 능동로 120\",\r\n        \"고려대학교\": \"서울특별시 성북구 안암로 145\"\r\n    };\r\n\r\n    const schools = [\"서울대학교\", \"연세대학교\", \"건국대학교\", \"고려대학교\"];\r\n\r\n    return  (\r\n        <DropDown title=\"현재 위치 선택 (학교 기준)\" data={schools} \r\n        changeValue={(value) => {\r\n            props.choose(campusNameToLocations[value])\r\n        }}>\r\n        </DropDown>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nvar GOOGLE_API_KEY = \"AIzaSyAICYHO0YSKGy43LCRInmPoAizzniq91Aw\"\r\n\r\nGeocode.setApiKey(GOOGLE_API_KEY)\r\nGeocode.setLanguage('en')\r\nGeocode.setRegion('es')\r\nGeocode.enableDebug()\r\n\r\nfunction getDistanceFromCoordinateToKm(startCoordinate ,endCoordinate) { \r\n  \r\n  console.log(endCoordinate);\r\n  console.log(startCoordinate);\r\n\r\n  function degToRad(deg) {\r\n     return deg * (Math.PI/180) \r\n  } \r\n  var R = 6371; \r\n  // Radius of the earth in km \r\n  var dLat = degToRad(endCoordinate.lat - startCoordinate.lat); \r\n  // deg2rad below \r\n  var dLon = degToRad(endCoordinate.lng - endCoordinate.lng); \r\n  var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n   Math.cos(degToRad(startCoordinate.lat)) * Math.cos(degToRad(endCoordinate.lat)) * Math.sin(dLon/2) * Math.sin(dLon/2);\r\n var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n  var d = R * c; \r\n  // Distance in km \r\n  console.log(d);\r\n  return d; \r\n}\r\n\r\nexport const  convertAddressToCoordinate = async (currentAddr) => {\r\n    return Geocode.fromAddress(currentAddr)\r\n      .then( response => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n        console.log(lat + \" \" +  lng);\r\n        return {lat, lng};\r\n      })\r\n      .catch(err => console.log(err))\r\n}\r\n\r\nexport default async function getNearStores(curAddress,  stores = [], distance = 3) {\r\n  \r\n  const curCoordinate = await convertAddressToCoordinate(curAddress);\r\n  console.log(stores);\r\n  await Promise.all(\r\n stores.map(async (store, index) =>  {\r\n  \r\n    const coordinate = await convertAddressToCoordinate(store.address)\r\n    console.log(coordinate)\r\n    stores[index] = {...store, \"coordinate\": coordinate};\r\n    return {...store, \"coordinate\": coordinate}\r\n  })\r\n  )\r\n\r\n  return stores.filter(store => {\r\n   \r\n    return getDistanceFromCoordinateToKm(curCoordinate, store.coordinate) <= distance\r\n  })\r\n}","import { useEffect, useState } from \"react\";\r\nimport Stores from \"../../components/stores/stores\";\r\nimport { fetchStores } from \"../../reduxThunk/stores/api\";\r\nimport getNearStores from \"../../util/api/distanceBetweenPlaces\";\r\n\r\n\r\n\r\nexport default function NearStoresContainer(props) {\r\n    const [nearStores, setNearStores] = useState([]);\r\n    let totalStores = [];\r\n\r\n    useEffect( async () => {\r\n        const stores = await fetchStores();\r\n        console.log(stores);\r\n        totalStores = stores;\r\n        setNearStores(stores);\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n        if(totalStores.length == 0)  {\r\n            totalStores = await fetchStores();\r\n            console.log(totalStores);\r\n        }\r\n        setNearStores(await getNearStores(props.curLocation, totalStores, 3));\r\n    }, [props.curLocation]);\r\n    \r\n\r\n    return (\r\n        <Stores isLoaded={false} stores={nearStores}/>\r\n    );\r\n}","import React, { useContext, useState } from \"react\";\r\nimport DropDown from \"../../components/dropdown/DropDown\";\r\nimport LocationDropDown from \"../../containers/LocationDropDown/LocationDropDown\";\r\nimport NearStoresContainer from \"../../containers/stores/NearStoresContainer\";\r\nimport StoresContainer from \"../../containers/stores/StoresContainer\";\r\nimport \"./WatchStoresPage.css\";\r\n\r\nexport default function StoresPageForStudent() {\r\n\r\n    const [isSchoolChosen, chooseSchool] = useState(false);\r\n    const [curLocation, chooseLocation] = useState(\"\");\r\n\r\n    return (\r\n            <div className=\"vertical\">\r\n                      <LocationDropDown choose={(location) => {\r\n                          chooseSchool(true)\r\n                          chooseLocation(location);\r\n                      }}>\r\n                       </LocationDropDown>\r\n                    {isSchoolChosen ? <NearStoresContainer curLocation={curLocation}></NearStoresContainer>\r\n                    : <StoresContainer></StoresContainer>}\r\n            </div>\r\n    );\r\n}","import \"./ReservationPage.css\";\r\nimport storeImage from \"../../images/store.jpg\"; \r\nimport DropDown from \"../../components/dropdown/DropDown\";\r\nimport { useState } from \"react\";\r\nimport { addReservation } from \"../../util/api/reservation\";\r\n\r\nexport default function ReservationPage(props) {\r\n\r\n    const store =  props.store;\r\n    const allPossibleDates = Array.from({length: 31}, (_, i) => i + 1 + \"일\");\r\n    const closeTime = parseInt(store.closeTime.slice(0, 2));\r\n    const startTime = parseInt(store.openTime.slice(0, 2));\r\n    const people =  Array.from({length: store.headerCount}, (_, i) => i + 1);\r\n    const hours = Array.from({length: closeTime - startTime + 1}, (_, i) => startTime + i + \"시\");\r\n    const [dates, setDates] = useState(allPossibleDates);\r\n\r\n    const reservationInfo = {\r\n        \"month\" :  0,\r\n        \"date\": 0,\r\n        \"peopleNum\": 0,\r\n        \"startHour\":  0,\r\n        \"endHour\": 0\r\n    }\r\n\r\n    const isValidReservation = () => {\r\n        return reservationInfo.month != 0 && reservationInfo.date != 0 \r\n        && reservationInfo.peopleNum != 0 && reservationInfo.startHour != 0 &&  reservationInfo.endHour != 0 && reservationInfo.startHour < reservationInfo.endHour;\r\n    }\r\n\r\n    const monthes = [\"11월\", \"12월\"];\r\n\r\n   return ( <div className=\"vertical\">\r\n             <img src={storeImage}></img>\r\n             <div className=\"store-detail\">\r\n                <div className=\"name\">\r\n                  가게 이름:  {store.name}\r\n                </div>\r\n                <div className=\"address margin-bottom\">\r\n                    주소: {store.address}\r\n                </div>\r\n                <div className=\"time margin-bottom\">\r\n                    영업시간: {store.openTime} ~ {store.closeTime}\r\n                </div>\r\n                <div className=\"header-count margin-bottom\">\r\n                    예약 가능한 인원수: {store.headerCount}\r\n                </div>\r\n                <div className=\"margin-bottom\">\r\n                   날짜 선택: \r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <DropDown className=\"margin-right\" title=\"월 선택\" data={monthes}\r\n                         changeValue={(value) =>  {\r\n                             console.log(value);\r\n                        if(value == 11) {\r\n                            let newDates =  [...dates];\r\n                            const curDate = (new Date()).getDate();\r\n                            newDates = newDates.filter(newDate => newDate >= curDate);\r\n                            console.log(newDates);\r\n                            setDates(newDates);\r\n                        }\r\n                        reservationInfo[\"month\"] = value;\r\n                    }}></DropDown>\r\n                    <DropDown title=\"날짜 선택\" data={dates} changeValue={(value) => {\r\n                        reservationInfo[\"date\"] = value;\r\n                    }}></DropDown>\r\n                </div>\r\n                <div className=\"margin-bottom\">\r\n                   시작 시간 선택: \r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <DropDown title=\"시간 선택\" data={hours}  changeValue={(value) => {\r\n                            reservationInfo[\"startHour\"] = value;\r\n                    }}></DropDown>\r\n                </div>\r\n                <div className=\"margin-bottom\">\r\n                   끝나는 시간 선택: \r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <DropDown title=\"시간 선택\" data={hours}  changeValue={(value) => {\r\n                            reservationInfo[\"endHour\"] = value;\r\n                    }}></DropDown>\r\n                </div>\r\n                <div className=\"margin-bottom\">\r\n                   인원수 선택: \r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <DropDown title=\"인원수 선택\" data={people}   changeValue={(value) => {\r\n                        reservationInfo[\"peopleNum\"] = value;\r\n                    }}></DropDown>\r\n                </div>\r\n                <button className=\"reserve-button\" onClick={async () => {\r\n                    if(isValidReservation(reservationInfo)) {\r\n                        // 학생 정보 추가하기;\r\n                        window.alert(\"예약 상세 페이지로 이동하세요.\")\r\n                    } else{\r\n                        window.alert(\"날짜 혹은 시간 혹은 인원수를 선택하지 않으셨습니다.\");\r\n                    }\r\n                }}>예약하기</button>\r\n             </div>\r\n          </div>);\r\n}","import \"./ReservationDetail.css\";\r\n\r\n\r\nexport default function ReservationDetailPage(props) {\r\n\r\n    return (\r\n        <div className=\"total-vertical\">\r\n            <div className=\"personal-info\">\r\n                <label for=\"booker-name\">예약자 이름: </label>\r\n                <input name=\"booker-name\" id=\"booker-name\"/>\r\n            </div>\r\n            <div className=\"personal-info\">\r\n                <label for=\"club-name\">동아리 이름: </label>\r\n                <input name=\"club-name\" id=\"club-name\"/>\r\n            </div>\r\n            <div  className=\"personal-info\">\r\n            <label for=\"phone-number\">전화번호: </label>\r\n                <input name=\"club-name\" id=\"club-name\"/>\r\n                전화 번호: \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport { fetchStores } from './reduxThunk/stores/api';\nimport StoresContainer from './containers/stores/StoresContainer';\nimport {createLogger} from \"redux-logger\";\nimport ReduxThunk from \"redux-thunk\";\nimport rootReducer from './reduxThunk';\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport StudentSignUp from \"./components/StudentSignUp\"\nimport StoresPageForStudent from './pages/StoresPageForUser/WatchStoresPage';\nimport ReservationPage from './pages/ReservationPage/ReservationPage';\nimport { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport ReservationDetailPage from './pages/ReservationDetail/ReservationDetailPage';\n\nfunction App() {\n\n  let tempStore = [];\n\n\n  useEffect( async () => {\n      const stores =  await fetchStores();\n      console.log(stores);\n      tempStore = stores[0];\n  }, [])\n\n  const logger = createLogger();\n  const store = createStore(rootReducer, applyMiddleware(logger, ReduxThunk))\n    return (\n    <Provider store={store}>\n    <div>\n        <ReservationDetailPage></ReservationDetailPage>\n        {/* <StoresPageForStudent></StoresPageForStudent> */}\n        {/* <ReservationPage store={{\n          address: \"서울특별시 서대문구 창천동 연세로12길 33\",\n          closeTime: \"22:00\",\n          headerCount: 30,\n          id: \"0LK11liFTjUbk2lRPdmc\",\n          name: \"아웃백스테이크하우스\",\n          openTime: \"11:30\",\n          ownerId: \"1345656\",\n          roadAddress: \"연세로12길\",\n          storeNumber: \"\\\"'5466\\\"\"\n        }}></ReservationPage> */}\n        <Router>\n           <Routes>\n            <Route exact path=\"/\" element={<StoresPageForStudent/>}>\n              </Route>\n            <Route exact path=\"/reservation\" element={<ReservationPage></ReservationPage>}>\n\n            </Route>\n            <Route exact path=\"/SignUp\" element={<StudentSignUp></StudentSignUp>}>\n            </Route>\n           </Routes>\n        </Router>\n    </div>\n    </Provider>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}